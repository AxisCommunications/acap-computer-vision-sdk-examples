name: Build object-detector-cpp application

on:
  push:
    paths:
      - 'object-detector-cpp/**'
      - '!object-detector-cpp/README.md'
      - '.github/workflows/object-detector-cpp.yml'
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - arch: armv7hf
            chip: cpu
          - arch: armv7hf
            chip: edgetpu
          - arch: aarch64
            chip: artpec8
    env:
      EXREPO: acap-computer-vision-examples
      EXNAME: object-detector-cpp
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v2
        with:
          install: true
      - name: Build ${{ env.example }} application
        env:
          example: ${{ env.EXNAME }}-${{ matrix.chip }}
          imagetag: ${{ env.EXREPO }}_${{ env.EXNAME }}-${{ matrix.chip }}:1.0
          modeltag: ${{ env.EXREPO }}_${{ env.EXNAME }}-${{ matrix.chip }}-model:1.0
        run: |
          cd $EXNAME
          docker run --rm --privileged multiarch/qemu-user-static --credential yes --persistent yes
          docker build --no-cache --build-arg CHIP=${{ matrix.chip }} --build-arg ARCH=${{ matrix.arch }} --tag $imagetag .
          docker build . -f Dockerfile.model -t $modeltag --build-arg ARCH=${{ matrix.arch }}
          docker image rm -f $imagetag
