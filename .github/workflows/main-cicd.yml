# This is a basic workflow to help you get started with Actions

name: Axis-CICD

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    ###

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    #- uses: actions/checkout@master
    #- name: Run ShellCheck
    #  uses: ludeeus/action-shellcheck@master
    #  env:
    #    SHELLCHECK_OPTS: -e SC2153 -e SC2148 -e SC2086

    # Runs a single command using the runners shell
    - name: Login to dockerhub axis account
      run: docker login -u ${{ secrets.DOCKERHUB_USER }} --password ${{ secrets.DOCKERHUB_PASS }}

    # Run build script for opencv-image-capture-cpp app
    - name: Build capture_app application
      run: |
        cd ./opencv-image-capture-cpp
        docker build -t axisecp/acap-opencv-image-capture-cpp:latest .

    # Run build script for opencv-qr-decoder-python app
    - name: Build qr-decoder application
      run: |
        cd ./opencv-qr-decoder-python
        docker build -t axisecp/acap-opencv-qr-decoder-python:latest .

    # Run build opencl-fft
    - name: Build opencl-fft application
      run: |
        cd ./opencl-fft
        docker build -t axisecp/acap-opencl-fft:latest .

    # Run build script for object-detector-cpp app
    - name: Build object-detector-cpp application
      run: |
        cd ./object-detector-cpp
        docker build -t axisecp/acap-object-detector-cpp:latest .

    # Run build object-detector-python
    - name: Build object-detector-python application
      run: |
        cd ./object-detector-python
        docker build -t axisecp/object-detector-python:latest .

    # Run build web-server
    - name: Build web-server application
      run: |
        cd ./web-server
        docker build -t axisecp/web-server:latest .

